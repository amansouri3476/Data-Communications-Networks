%% CRC Calculation
clc
close all
%data=hexToBinaryVector('0x10a47bea8000123456789008004500002eb3fe000080110540c0a8002cc0a8000404000400001a2de8000102030405060708090a0b0c0d0e0f1011be31881b');

fourbytefirst = hexToBinaryVector('0x0010a47b');
fourbytefirstcomp = xor([zeros(1,11),fourbytefirst],1);
data=hexToBinaryVector('0xa47bea8000123456789008004500002eb3fe000080110540c0a8002cc0a8000404000400001a2de8000102030405060708090a0b0c0d0e0f1011b331');
D=[fourbytefirstcomp,data,zeros(1,32)]; %data concatenated with 32 zeros at the end
%D=[data,zeros(1,32)]; %data concatenated with 32 zeros at the end
SR=zeros(1,32); %Shift registers
feedback=0; %initial feedback value
for l=1:length(D) %Start of Loop
    new_feedback=xor(SR(32),D(l));
    feedback=new_feedback;
    
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    SR(4)=SR(3);
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(3)=xor(SR(2),feedback);
    SR(4)=SR(3);
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(2)=xor(SR(1),feedback);
    SR(3)=xor(SR(2),feedback);
    SR(4)=SR(3);
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    SR(1)=xor(D(l),feedback);
    SR(2)=xor(SR(1),feedback);
    SR(3)=xor(SR(2),feedback);
    SR(4)=SR(3);
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
    
    
    SR(1)=xor(D(l),feedback);
    SR(2)=xor(SR(1),feedback);
    SR(3)=xor(SR(2),feedback);
    SR(4)=SR(3);
    SR(5)=xor(SR(4),feedback);
    SR(6)=xor(SR(5),feedback);
    SR(7)=SR(6);
    SR(8)=xor(SR(7),feedback);
    SR(9)=xor(SR(8),feedback);
    SR(10)=SR(9);
    SR(11)=xor(SR(10),feedback);
    SR(12)=xor(SR(11),feedback);
    SR(13)=xor(SR(12),feedback);
    SR(14)=SR(13);
    SR(15)=SR(14);
    SR(16)=SR(15);
    SR(17)=xor(SR(16),feedback);
    SR(18)=SR(17);
    SR(19)=SR(18);
    SR(20)=SR(19);
    SR(21)=SR(20);
    SR(22)=SR(21);
    SR(23)=xor(SR(22),feedback);
    SR(24)=xor(SR(23),feedback);
    SR(25)=SR(24);
    SR(26)=SR(25);
    SR(27)=xor(SR(26),feedback);
    SR(28)=SR(27);
    SR(29)=SR(28);
    SR(30)=SR(29);
    SR(31)=SR(30);
    SR(32)=SR(31);
    new_feedback=SR(32);
    feedback=new_feedback;
    
end

temp=SR(1:32);
message_CRC = binaryVectorToHex(temp)
